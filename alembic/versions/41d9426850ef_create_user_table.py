"""create user table

Revision ID: 41d9426850ef
Revises: 
Create Date: 2025-08-04 19:24:53.215199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '41d9426850ef'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keywords',
    sa.Column('keyword_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('keyword_text', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('keyword_id')
    )
    op.create_table('news_articles',
    sa.Column('news_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('original_url', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('news_id')
    )
    op.create_table('templates',
    sa.Column('template_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('template_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('nickname', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', 'MODERATOR', name='roleenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'COMPLETED', 'CANCELLED', name='statusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('social_accounts',
    sa.Column('social_account_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('provider_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('social_account_id')
    )
    op.create_table('user_agreements',
    sa.Column('agreement_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('agreement_type', sa.Enum('TERMS_OF_SERVICE', 'PRIVACY_POLICY', 'USER_AGREEMENT', name='agreementtypeenum'), nullable=False),
    sa.Column('agreed_at', sa.DateTime(), nullable=True),
    sa.Column('agreement_version', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('agreement_id')
    )
    op.create_table('user_api_keys',
    sa.Column('key_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'COMPLETED', 'CANCELLED', name='statusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('key_id')
    )
    op.create_table('video_projects',
    sa.Column('project_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('news_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'COMPLETED', 'CANCELLED', name='statusenum'), nullable=False),
    sa.Column('summary_script', sa.Text(), nullable=True),
    sa.Column('final_video_path', sa.String(length=255), nullable=True),
    sa.Column('final_metadata_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['news_articles.news_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('assets',
    sa.Column('asset_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('asset_type', sa.Enum('IMAGE', 'VIDEO', 'AUDIO', 'DOCUMENT', name='assettypeenum'), nullable=False),
    sa.Column('source_info', sa.String(length=100), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('license_info', sa.String(length=100), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['video_projects.project_id'], ),
    sa.PrimaryKeyConstraint('asset_id')
    )
    op.create_table('project_keywords',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.keyword_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['video_projects.project_id'], ),
    sa.PrimaryKeyConstraint('project_id', 'keyword_id')
    )
    op.create_table('social_uploads',
    sa.Column('upload_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.Enum('YOUTUBE', 'INSTAGRAM', 'TIKTOK', 'TWITTER', name='platformenum'), nullable=False),
    sa.Column('post_url', sa.String(length=2048), nullable=True),
    sa.Column('upload_status', sa.Enum('UPLOADING', 'COMPLETED', 'FAILED', 'PROCESSING', name='uploadstatusenum'), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['video_projects.project_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('upload_id')
    )
    op.create_table('user_ai_usage_history',
    sa.Column('usage_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('ai_service', sa.String(length=100), nullable=False),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('usage_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['video_projects.project_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('usage_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_ai_usage_history')
    op.drop_table('social_uploads')
    op.drop_table('project_keywords')
    op.drop_table('assets')
    op.drop_table('video_projects')
    op.drop_table('user_api_keys')
    op.drop_table('user_agreements')
    op.drop_table('social_accounts')
    op.drop_table('users')
    op.drop_table('templates')
    op.drop_table('news_articles')
    op.drop_table('keywords')
    # ### end Alembic commands ###
